version: '3.4'

# shared config for webserver, url-fetcher and stream-loader services

x-docnow: &docnow
  environment:
    - REDIS_HOST=redis
    - DB_HOSTNAME=db
    - DB_USERNAME
    - DB_PASSWORD
    - DB_DATABASE
    - NODE_ENV
    - CONSUMER_KEY
    - CONSUMER_SECRET
    - ACCESS_TOKEN
    - ACCESS_TOKEN_SECRET
  build:
    context: .
  volumes:
    - ./src:/code/src
    - ./test:/code/test
  depends_on:
    - db
    - redis
  links:
    - db
    - redis

services:

  redis:
    image: redis

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
    volumes:
      - ./config/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

    command: postgres -c logging_collector=on -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all

  webapp:
    <<: *docnow
    entrypoint: src/commands/wait-for-it.sh -t 120 db:5432 -- ./entrypoint.sh
    ports:
      - 3000:3000

  tweet-loader:
    <<: *docnow
    entrypoint: src/commands/wait-for-it.sh -t 120 db:5432 -- npm run tweet-loader

  url-fetcher:
    <<: *docnow
    entrypoint: src/commands/wait-for-it.sh -t 120 db:5432 -- npm run url-fetcher 

  pghero:
    image: ankane/pghero
    container_name: pghero
    ports:
      - 3001:8080
    environment:
      DATABASE_URL: "postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_DATABASE}"
    volumes:
      - ./config/pghero.yml:/app/config/pghero.yml
    links:
      - db
